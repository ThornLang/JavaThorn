{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Thorn",
  "scopeName": "source.thorn",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#classes"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#operators"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.thorn",
          "begin": "//",
          "end": "$",
          "patterns": [
            {
              "name": "punctuation.definition.comment.thorn",
              "match": "//"
            }
          ]
        },
        {
          "name": "comment.block.thorn",
          "begin": "/\\*",
          "end": "\\*/",
          "patterns": [
            {
              "name": "punctuation.definition.comment.begin.thorn",
              "match": "/\\*"
            },
            {
              "name": "punctuation.definition.comment.end.thorn",
              "match": "\\*/"
            }
          ]
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.thorn",
          "match": "\\b(if|else|while|for|in|return|import|export|from|class|this)\\b"
        },
        {
          "name": "constant.language.thorn",
          "match": "\\b(true|false|null)\\b"
        },
        {
          "name": "storage.modifier.thorn",
          "match": "@immut"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.thorn",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.thorn",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.thorn",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.thorn",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.thorn",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "meta.function.thorn",
          "begin": "\\$\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.function.thorn"
            },
            "1": {
              "name": "entity.name.function.thorn"
            }
          },
          "end": "\\)",
          "patterns": [
            {
              "name": "variable.parameter.thorn",
              "match": "[a-zA-Z_][a-zA-Z0-9_]*"
            }
          ]
        },
        {
          "name": "entity.name.function.call.thorn",
          "match": "([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
        }
      ]
    },
    "classes": {
      "patterns": [
        {
          "name": "meta.class.thorn",
          "begin": "\\b(class)\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.thorn"
            },
            "2": {
              "name": "entity.name.class.thorn"
            }
          },
          "end": "(?=\\{)",
          "patterns": []
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.thorn",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.thorn",
          "match": "\\+=|-=|\\*=|/=|%=|="
        },
        {
          "name": "keyword.operator.arithmetic.thorn",
          "match": "\\+|-|\\*|/|%|\\*\\*"
        },
        {
          "name": "keyword.operator.comparison.thorn",
          "match": "==|!=|<=|>=|<|>"
        },
        {
          "name": "keyword.operator.logical.thorn",
          "match": "&&|\\|\\||!"
        },
        {
          "name": "keyword.operator.nullish.thorn",
          "match": "\\?\\?"
        },
        {
          "name": "punctuation.definition.function.thorn",
          "match": "\\$"
        }
      ]
    }
  }
}