name: Run Regression Tests (Bot)

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: write
  pull-requests: write
  actions: write

jobs:
  run-regression:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request && 
      contains(github.event.comment.body, '@run_regression')
    
    steps:
    - name: Generate token
      id: generate-token
      uses: tibdex/github-app-token@v2
      with:
        app_id: ${{ secrets.THORN_LANG_APP_ID }}
        private_key: ${{ secrets.THORN_LANG_APP_PRIVATE_KEY }}
    
    - name: Add acknowledgment reaction
      uses: actions/github-script@v6
      with:
        github-token: ${{ steps.generate-token.outputs.token }}
        script: |
          github.rest.reactions.createForIssueComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: context.payload.comment.id,
            content: 'rocket'
          });
    
    - name: Checkout PR
      uses: actions/checkout@v3
      with:
        token: ${{ steps.generate-token.outputs.token }}
        # Checkout the PR branch
        ref: refs/pull/${{ github.event.issue.number }}/head
    
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Build project
      run: |
        echo "🔨 Building ThornLang..."
        chmod +x scripts/build.sh && ./scripts/build.sh
    
    - name: Run regression tests
      id: regression-tests
      run: |
        echo "🧪 Running regression tests..."
        REGRESSION_DIR="tests/regression"
        
        if [ ! -d "$REGRESSION_DIR" ]; then
          echo "❌ No regression directory found at $REGRESSION_DIR"
          echo "status=no-tests" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        # Count total test files
        TOTAL_TESTS=$(find "$REGRESSION_DIR" -name "*.thorn" -type f | wc -l)
        
        if [ "$TOTAL_TESTS" -eq 0 ]; then
          echo "❌ No regression tests found in $REGRESSION_DIR"
          echo "status=no-tests" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        echo "📊 Found $TOTAL_TESTS regression tests"
        echo ""
        
        # Initialize counters and files
        echo "0" > /tmp/passed_count
        echo "0" > /tmp/failed_count
        echo "" > /tmp/failed_tests
        
        # Create logs directory
        mkdir -p /tmp/test_logs
        
        # Run each test file
        for test_file in $(find "$REGRESSION_DIR" -name "*.thorn" -type f | sort); do
          test_name=$(basename "$test_file")
          echo "Running: $test_name"
          
          # Run the test and capture output
          if java com.thorn.Thorn "$test_file" > "/tmp/test_logs/${test_name}.log" 2>&1; then
            echo "  ✅ PASSED"
            PASSED=$(cat /tmp/passed_count)
            PASSED=$((PASSED + 1))
            echo "$PASSED" > /tmp/passed_count
          else
            echo "  ❌ FAILED"
            echo "  First 10 lines of output:"
            head -10 "/tmp/test_logs/${test_name}.log" | sed 's/^/    /'
            echo "    ... (use @get_fail_log $test_name to see full output)"
            FAILED=$(cat /tmp/failed_count)
            FAILED=$((FAILED + 1))
            echo "$FAILED" > /tmp/failed_count
            echo "- $test_name" >> /tmp/failed_tests
          fi
          echo ""
        done
        
        # Read final counters from files
        PASSED=$(cat /tmp/passed_count)
        FAILED=$(cat /tmp/failed_count)
        FAILED_TESTS=$(cat /tmp/failed_tests | grep -v '^$' | tr '\n' ' ')
        
        # Summary
        echo "========================================"
        echo "📊 Regression Test Summary"
        echo "========================================"
        echo "Total: $TOTAL_TESTS"
        echo "Passed: $PASSED ✅"
        echo "Failed: $FAILED ❌"
        
        if [ "$FAILED" -gt 0 ]; then
          echo ""
          echo "Failed tests:"
          cat /tmp/failed_tests | grep -v '^$'
          echo "status=failed" >> $GITHUB_OUTPUT
          echo "failed_count=$FAILED" >> $GITHUB_OUTPUT
          echo "passed_count=$PASSED" >> $GITHUB_OUTPUT
          echo "total_count=$TOTAL_TESTS" >> $GITHUB_OUTPUT
          exit 1
        else
          echo ""
          echo "🎉 All regression tests passed!"
          echo "status=passed" >> $GITHUB_OUTPUT
          echo "failed_count=0" >> $GITHUB_OUTPUT
          echo "passed_count=$PASSED" >> $GITHUB_OUTPUT
          echo "total_count=$TOTAL_TESTS" >> $GITHUB_OUTPUT
        fi
    
    - name: Upload test logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: regression-test-logs-${{ github.event.issue.number }}
        path: /tmp/test_logs/
        retention-days: 7
    
    - name: Post results comment
      if: always()
      uses: actions/github-script@v6
      with:
        github-token: ${{ steps.generate-token.outputs.token }}
        script: |
          const status = '${{ steps.regression-tests.outputs.status }}';
          const passed = '${{ steps.regression-tests.outputs.passed_count }}' || '0';
          const failed = '${{ steps.regression-tests.outputs.failed_count }}' || '0';
          const total = '${{ steps.regression-tests.outputs.total_count }}' || '0';
          
          let message = '## 🧪 Regression Test Results\n\n';
          
          if (status === 'no-tests') {
            message += '❌ No regression tests found in `tests/regression/`\n';
          } else if (status === 'passed') {
            message += `✅ **All ${total} regression tests passed!**\n\n`;
            message += `- Passed: ${passed} ✅\n`;
            message += `- Failed: ${failed} ❌\n`;
          } else {
            message += `❌ **${failed} of ${total} regression tests failed**\n\n`;
            message += `- Passed: ${passed} ✅\n`;
            message += `- Failed: ${failed} ❌\n\n`;
            message += 'Check the workflow logs for detailed failure information.';
          }
          
          message += '\n\n<sub>Triggered by @' + context.payload.comment.user.login + '</sub>';
          
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: message
          });
          
          // Add reaction to indicate completion
          const reaction = status === 'passed' ? '+1' : (status === 'no-tests' ? 'confused' : '-1');
          github.rest.reactions.createForIssueComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: context.payload.comment.id,
            content: reaction
          });
  
  get-fail-log:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request && 
      contains(github.event.comment.body, '@get_fail_log')
    
    steps:
    - name: Generate token
      id: generate-token
      uses: tibdex/github-app-token@v2
      with:
        app_id: ${{ secrets.THORN_LANG_APP_ID }}
        private_key: ${{ secrets.THORN_LANG_APP_PRIVATE_KEY }}
    
    - name: Extract test name
      id: extract-test
      run: |
        COMMENT="${{ github.event.comment.body }}"
        # Extract test name after @get_fail_log
        TEST_NAME=$(echo "$COMMENT" | grep -oP '@get_fail_log\s+\K\S+' || echo "")
        
        if [ -z "$TEST_NAME" ]; then
          echo "error=true" >> $GITHUB_OUTPUT
          echo "message=❌ Usage: @get_fail_log <test_name>" >> $GITHUB_OUTPUT
        else
          echo "test_name=$TEST_NAME" >> $GITHUB_OUTPUT
          echo "error=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Download test logs
      if: steps.extract-test.outputs.error == 'false'
      uses: actions/download-artifact@v3
      with:
        name: regression-test-logs-${{ github.event.issue.number }}
        path: /tmp/test_logs/
      continue-on-error: true
    
    - name: Check and format log
      if: steps.extract-test.outputs.error == 'false'
      id: format-log
      run: |
        TEST_NAME="${{ steps.extract-test.outputs.test_name }}"
        LOG_FILE="/tmp/test_logs/${TEST_NAME}"
        
        if [ ! -f "$LOG_FILE" ]; then
          # Try with .thorn extension if not already included
          if [[ ! "$TEST_NAME" == *.thorn ]]; then
            LOG_FILE="/tmp/test_logs/${TEST_NAME}.thorn.log"
          fi
        fi
        
        if [ -f "$LOG_FILE" ]; then
          echo "found=true" >> $GITHUB_OUTPUT
          # Format the log content for GitHub comment
          {
            echo "log_content<<EOF"
            echo "## 📋 Test Log: $TEST_NAME"
            echo ""
            echo '```'
            cat "$LOG_FILE"
            echo '```'
            echo "EOF"
          } >> $GITHUB_OUTPUT
        else
          echo "found=false" >> $GITHUB_OUTPUT
          echo "message=❌ No log found for test: $TEST_NAME" >> $GITHUB_OUTPUT
        fi
    
    - name: Post log comment
      if: always()
      uses: actions/github-script@v6
      with:
        github-token: ${{ steps.generate-token.outputs.token }}
        script: |
          let message = '';
          
          if ('${{ steps.extract-test.outputs.error }}' === 'true') {
            message = '${{ steps.extract-test.outputs.message }}';
          } else if ('${{ steps.format-log.outputs.found }}' === 'false') {
            message = '${{ steps.format-log.outputs.message }}';
            message += '\n\n**Available test logs:** Check artifacts or ensure tests have been run with @run_regression first.';
          } else {
            message = `${{ steps.format-log.outputs.log_content }}`;
          }
          
          message += '\n\n<sub>Triggered by @' + context.payload.comment.user.login + '</sub>';
          
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: message
          });