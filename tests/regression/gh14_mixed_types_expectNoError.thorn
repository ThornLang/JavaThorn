// Test mixed primitive and class types

class Employee {
    $ init(name: string, department: string, salary: number) {
        this.name = name;
        this.department = department;
        this.salary = salary;
    }
    
    $ get_annual_bonus(): number {
        return this.salary * 0.1;
    }
}

// Variables with different types
company_name: string = "TechCorp";
employee_count: number = 150;
is_public: boolean = true;
ceo: Employee = Employee("Jane Smith", "Executive", 500000);

// Function with mixed parameter types
$ print_company_info(name: string, count: number, public: boolean, leader: Employee): void {
    print("Company: " + name);
    print("Employees: " + count);
    print("Public: " + public);
    print("CEO: " + leader.name + " (Annual bonus: $" + leader.get_annual_bonus() + ")");
}

// Test
print_company_info(company_name, employee_count, is_public, ceo);

// Collections with mixed content
employees: Array[Employee] = [
    Employee("Alice", "Engineering", 120000),
    Employee("Bob", "Sales", 90000),
    ceo
];

print("\nAll employees:");
for (i = 0; i < employees.length; i = i + 1) {
    emp: Employee = employees[i];
    print("  " + emp.name + " - " + emp.department);
}