import "system";

// Test: System module functionality  
// Tests system information, environment variables, and process operations

// Test 1: System information
print("Platform: " + platform());
print("Architecture: " + architecture());
print("Hostname: " + hostname());
print("Username: " + username());
print("Home directory: " + home_dir());
print("Temp directory: " + temp_dir());
print("CPU count: " + cpu_count());
print("Total memory: " + (total_memory() / 1024 / 1024) + " MB");
print("Available memory: " + (available_memory() / 1024 / 1024) + " MB");

// Test 2: Environment variables
path = getenv("PATH");
print("PATH exists: " + (path != null));

// Test setting an environment variable (note: this may not work in all environments)
// setenv("THORN_TEST", "hello");
// test_var = getenv("THORN_TEST");
// print("Test env var: " + test_var);

// Get all environment variables
env_vars = environ();
print("Number of env vars: " + env_vars.keys().length);

// Test 3: Process information
print("Current PID: " + pid());
print("Parent PID: " + ppid());

// Test 4: Working directory
curr_dir = cwd();
print("Current directory: " + curr_dir);

// Test changing directory (careful with this)
// home = home_dir();
// chdir(home);
// new_cwd = cwd();
// print("Changed to: " + new_cwd);
// chdir(curr_dir); // Change back

// Test 5: Path operations
home = home_dir();
config_path = join_path([home, ".config", "test"]);
print("Joined path: " + config_path);

// Test realpath (on current directory)
real = realpath(".");
print("Real path of '.': " + real);

// Test 6: Time functions
start_time = time();
start_millis = time_millis();
start_nanos = time_nanos();

// Sleep for 0.1 seconds
sleep(0.1);

end_time = time();
elapsed = end_time - start_time;
print("Elapsed time: " + elapsed + " seconds");

// Test 7: Process execution
// Execute a simple command
if (platform() == "windows") {
    // Windows command
    proc = exec("cmd", ["/c", "echo", "Hello from Windows"]);
} else {
    // Unix-like command  
    proc = exec("echo", ["Hello from Unix"]);
}

print("Started process with PID: " + proc.pid());
exit_code = proc.wait();
print("Process exited with code: " + exit_code);

// Test 8: Environment variable expansion
test_string = "Home is $HOME and path is ${PATH}";
expanded = expand_env(test_string);
print("Original: " + test_string);
print("Expanded: " + expanded);

// Test 9: Check if a process is alive
proc2 = exec("sleep", ["0.1"]);
print("Process alive immediately: " + proc2.is_alive());
sleep(0.2);
print("Process alive after 0.2s: " + proc2.is_alive());

print("âœ… System module tests completed!");