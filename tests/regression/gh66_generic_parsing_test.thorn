// Test parsing of generic type parameters

// Generic function declaration
$ map[T, R](list: Array[T], func: Function[(T), R]): Array[R] {
    result: Array[R] = [];
    for (item in list) {
        result.push(func(item));
    }
    return result;
}

// Generic class declaration
class Box[T] {
    $ init(value: T) {
        this.value = value;
    }
    
    $ get(): T {
        return this.value;
    }
}

// Function calls with type arguments
numbers = map[string, number](["hello", "world"], $(s) => s.length);
doubled = map[number, number]([1, 2, 3], $(x) => x * 2);

// Class instantiation with type arguments (not yet implemented)
// stringBox: Box[string] = Box[string]("hello");

print("Generic parsing test completed");