// Test dictionary .get() and .set() methods

// Create a dictionary
dict = {
    "name": "Alice",
    "age": 25,
    "city": "Seattle"
};

// Test basic get
print("Basic get:");
print(dict.get("name"));  // Should print "Alice"
print(dict.get("age"));   // Should print 25

// Test get with default value
print("\nGet with default:");
print(dict.get("country", "USA"));  // Should print "USA" (default)
print(dict.get("city", "Unknown")); // Should print "Seattle" (exists)

// Test set
print("\nBasic set:");
dict.set("country", "Canada");
dict.set("age", 26);
print(dict.get("country")); // Should print "Canada"
print(dict.get("age"));     // Should print 26

// Test method chaining
print("\nMethod chaining:");
dict.set("job", "Engineer")
    .set("hobby", "Photography")
    .set("pet", "Cat");

print(dict.get("job"));   // Should print "Engineer"
print(dict.get("hobby")); // Should print "Photography"
print(dict.get("pet"));   // Should print "Cat"

// Test with null values
print("\nNull handling:");
dict.set("nullKey", null);
print(dict.get("nullKey"));        // Should print null
print(dict.get("nullKey", "default")); // Should print "default"

// Test that bracket notation still works
print("\nBracket notation still works:");
print(dict["name"]);  // Should print "Alice"
dict["language"] = "Thorn";
print(dict.get("language")); // Should print "Thorn"

// Verify all keys are present
print("\nAll keys:");
keys = dict.keys();
for (key in keys) {
    print(key + ": " + dict.get(key));
}